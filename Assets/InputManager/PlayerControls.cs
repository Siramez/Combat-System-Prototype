//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.7.0
//     from Assets/InputManager/PlayerControls.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @PlayerControls: IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @PlayerControls()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""PlayerControls"",
    ""maps"": [
        {
            ""name"": ""Movement"",
            ""id"": ""a29c8eb0-7a45-4b7d-9a3a-b849df22f994"",
            ""actions"": [
                {
                    ""name"": ""Jump"",
                    ""type"": ""Button"",
                    ""id"": ""9f108d46-f197-4d8c-9e5f-bf5f7b731de2"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Crouch"",
                    ""type"": ""Button"",
                    ""id"": ""f8b7eb64-aadf-4759-bcdc-2676c9386676"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Sprint"",
                    ""type"": ""Button"",
                    ""id"": ""d653819c-f83e-4852-a980-bdcb49ca0ef0"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Move"",
                    ""type"": ""Value"",
                    ""id"": ""d91fea71-48b6-4840-ad55-2e6c41964489"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""d65eb70e-bd7c-4462-9df7-805cf511cf39"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Jump"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""02e139dc-3d8c-4833-8a67-a08b63bf6651"",
                    ""path"": ""<Keyboard>/leftCtrl"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Crouch"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""392d5619-7949-448b-95c5-20444be1bb91"",
                    ""path"": ""<Keyboard>/leftShift"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Sprint"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""9f4507dd-3330-408f-a021-a72f56b40cfe"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""ec47d7ce-f692-4dd4-9868-7ec7da5cfbdc"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""983ec77d-6489-4ed1-8c9d-7f09008e22b2"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""e353962e-d8ba-453a-a2db-6d7f26e04697"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""2046077a-1ea0-4c17-a7a4-004f96a2d776"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                }
            ]
        },
        {
            ""name"": ""Combat"",
            ""id"": ""b60d8597-2c80-4a67-b6ff-881c91cb16c8"",
            ""actions"": [
                {
                    ""name"": ""LMB"",
                    ""type"": ""Button"",
                    ""id"": ""d3a4edc9-6290-45e5-8a8d-43fdfcdd6cb3"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""RMB"",
                    ""type"": ""Button"",
                    ""id"": ""4d93f25a-c9d2-42ef-b0a7-cee574970d7c"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""E"",
                    ""type"": ""Button"",
                    ""id"": ""0e761c4b-e949-4935-ac1f-d393efa4df05"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""F"",
                    ""type"": ""Button"",
                    ""id"": ""189e177c-ec82-43c3-b84e-030540de430c"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Q"",
                    ""type"": ""Button"",
                    ""id"": ""5c92e6fe-6e8c-4fa3-878c-eebd95de71b3"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""R"",
                    ""type"": ""Button"",
                    ""id"": ""75d28268-53c4-4fe2-8f15-0422e5938e7b"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""C"",
                    ""type"": ""Button"",
                    ""id"": ""fe01d1cd-2485-499f-a372-c4eacb3b9d65"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ShiftQ"",
                    ""type"": ""Button"",
                    ""id"": ""94e5cc24-373f-4faf-9907-023bdcc2ba87"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ShiftE"",
                    ""type"": ""Button"",
                    ""id"": ""28365df0-a337-480a-9cb4-a661a1ca5726"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ShiftF"",
                    ""type"": ""Button"",
                    ""id"": ""0cbce3f4-4881-463c-8d4c-d27675f9bd66"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ShiftLMB"",
                    ""type"": ""Button"",
                    ""id"": ""235ad340-c130-4d40-a8a2-4a5c123d631c"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ShiftRMB"",
                    ""type"": ""Button"",
                    ""id"": ""f0208df3-953f-48a9-ac77-f26bb6d8d6b7"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""WE"",
                    ""type"": ""Button"",
                    ""id"": ""8db4e120-9ef0-474c-acd4-3704c8626e57"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""WQ"",
                    ""type"": ""Button"",
                    ""id"": ""f07eb743-3e9a-47cd-bcf2-dfc921fee6b4"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""WF"",
                    ""type"": ""Button"",
                    ""id"": ""57fbb1d2-a5f7-4c14-8217-26d2453b0cb3"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""SE"",
                    ""type"": ""Button"",
                    ""id"": ""fa897779-4cf2-419f-835c-a6b378f3518c"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""SF"",
                    ""type"": ""Button"",
                    ""id"": ""bd371b19-232d-4014-b017-752e66d68750"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""SQ"",
                    ""type"": ""Button"",
                    ""id"": ""aac74c45-c804-4852-80ff-bf4aed80e845"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""82dc236d-918d-4f92-bf20-873030843a16"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Mouse"",
                    ""action"": ""LMB"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""74f071ed-f7b4-4985-ac8e-1e97b5dbf10b"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Mouse"",
                    ""action"": ""RMB"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""81ae013f-5df4-4fbe-8ac2-231e0f5ab547"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""E"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""98062166-dfe3-409c-973c-1d2779f5905d"",
                    ""path"": ""<Keyboard>/f"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""F"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""59759cdf-5aa0-43a7-863e-592a1c82932f"",
                    ""path"": ""<Keyboard>/q"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Q"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c8401ea0-5f95-48a0-888c-d5b97b7b1549"",
                    ""path"": ""<Keyboard>/r"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""R"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""ShiftQ"",
                    ""id"": ""ad63f9f6-7823-4cb9-9882-9375e6f98a56"",
                    ""path"": ""OneModifier"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ShiftQ"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""modifier"",
                    ""id"": ""d705b37f-6d3c-40cf-b3a6-22caff5c3eab"",
                    ""path"": ""<Keyboard>/leftShift"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ShiftQ"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""binding"",
                    ""id"": ""28b733b2-607c-4cba-8f8f-68e362ae15b3"",
                    ""path"": ""<Keyboard>/q"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ShiftQ"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""ShiftE"",
                    ""id"": ""35dabee7-3204-4190-800d-2507840324cf"",
                    ""path"": ""OneModifier"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ShiftE"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""modifier"",
                    ""id"": ""5a6f0601-4ff0-4338-83a3-a1c5d50a1e12"",
                    ""path"": ""<Keyboard>/leftShift"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ShiftE"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""binding"",
                    ""id"": ""3a08a12e-a38e-40d0-944f-b442d87784f2"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ShiftE"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Shift+F"",
                    ""id"": ""2ec4597d-9c95-4e3f-8d80-c84d8515ffbb"",
                    ""path"": ""OneModifier"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ShiftF"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""modifier"",
                    ""id"": ""3a8792e2-c3a7-4e69-bb76-a4ae43a348ab"",
                    ""path"": ""<Keyboard>/leftShift"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ShiftF"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""binding"",
                    ""id"": ""cc52cf0c-3766-42a1-b3ea-f8330f5a4329"",
                    ""path"": ""<Keyboard>/f"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ShiftF"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Shift+LMB"",
                    ""id"": ""70ce6176-60a3-4cfa-944a-5b0668711621"",
                    ""path"": ""OneModifier"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ShiftLMB"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""modifier"",
                    ""id"": ""f3b34f34-ec10-4d2b-8e66-bf6103c778c0"",
                    ""path"": ""<Keyboard>/leftShift"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ShiftLMB"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""binding"",
                    ""id"": ""a5a43281-1216-4f49-8853-e9ac4c7ba416"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ShiftLMB"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Shift+RMB"",
                    ""id"": ""5cc6b196-2904-470f-b1f1-583f9aadf2c1"",
                    ""path"": ""OneModifier"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ShiftRMB"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""modifier"",
                    ""id"": ""a6c31a4d-9d03-41b2-9a83-f0d1830f4095"",
                    ""path"": ""<Keyboard>/leftShift"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ShiftRMB"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""binding"",
                    ""id"": ""56085fda-04ff-4cf8-999e-5ec466ca1dae"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ShiftRMB"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""W+E"",
                    ""id"": ""30a84f33-fc7e-4e4b-b8de-26ac5c971beb"",
                    ""path"": ""OneModifier"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""WE"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""modifier"",
                    ""id"": ""7d57ca2d-dfa0-455f-a655-3941761c20e7"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""WE"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""binding"",
                    ""id"": ""6e9c47ae-e017-413f-bd62-4a07198912ac"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""WE"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""W+Q"",
                    ""id"": ""7d9e9354-fa18-4085-8f02-4f4e0f850968"",
                    ""path"": ""OneModifier"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""WQ"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""modifier"",
                    ""id"": ""dd963a15-331c-4438-b44c-2d2c12e6b0a5"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""WQ"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""binding"",
                    ""id"": ""f27cfb65-f8a4-40e4-8286-416bc31836b5"",
                    ""path"": ""<Keyboard>/q"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""WQ"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""W+F"",
                    ""id"": ""c540c2a0-b804-4ef8-bd4d-648247b5ad87"",
                    ""path"": ""OneModifier"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""WF"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""modifier"",
                    ""id"": ""062896b4-2a20-40eb-926c-23d761f3ab57"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""WF"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""binding"",
                    ""id"": ""9ff32522-a2c5-4278-ab82-588fe4b6a96c"",
                    ""path"": ""<Keyboard>/f"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""WF"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""S+E"",
                    ""id"": ""d0ad22b3-c52d-405a-b608-fce2c58a1f2d"",
                    ""path"": ""OneModifier"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SE"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""modifier"",
                    ""id"": ""2c7c10fb-a932-44ba-a69d-d4c3bfb56997"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SE"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""binding"",
                    ""id"": ""a58973f4-5d0c-4532-aec7-537b40be9291"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SE"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""S+F"",
                    ""id"": ""ef8f9655-875c-4912-8b4b-0d601d500a95"",
                    ""path"": ""OneModifier"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SF"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""modifier"",
                    ""id"": ""5c800fcb-dfa9-410d-bd3a-9dc5f1020d0d"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SF"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""binding"",
                    ""id"": ""0ec34772-2940-48fd-b0d3-ad7aec465ec9"",
                    ""path"": ""<Keyboard>/f"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SF"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""S+Q"",
                    ""id"": ""6efd6ab0-8d29-4fb6-b6a2-6a59284c45a5"",
                    ""path"": ""OneModifier"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SQ"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""modifier"",
                    ""id"": ""e0876e8d-dd0d-47ae-9255-b0542a2d3acb"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SQ"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""binding"",
                    ""id"": ""7e14c6f3-e206-4979-83a0-c535c2880017"",
                    ""path"": ""<Keyboard>/q"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SQ"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""4f19b955-a5e5-4b96-8231-873ce10b75d5"",
                    ""path"": ""<Keyboard>/c"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""C"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": [
        {
            ""name"": ""Mouse"",
            ""bindingGroup"": ""Mouse"",
            ""devices"": [
                {
                    ""devicePath"": ""<Mouse>"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        }
    ]
}");
        // Movement
        m_Movement = asset.FindActionMap("Movement", throwIfNotFound: true);
        m_Movement_Jump = m_Movement.FindAction("Jump", throwIfNotFound: true);
        m_Movement_Crouch = m_Movement.FindAction("Crouch", throwIfNotFound: true);
        m_Movement_Sprint = m_Movement.FindAction("Sprint", throwIfNotFound: true);
        m_Movement_Move = m_Movement.FindAction("Move", throwIfNotFound: true);
        // Combat
        m_Combat = asset.FindActionMap("Combat", throwIfNotFound: true);
        m_Combat_LMB = m_Combat.FindAction("LMB", throwIfNotFound: true);
        m_Combat_RMB = m_Combat.FindAction("RMB", throwIfNotFound: true);
        m_Combat_E = m_Combat.FindAction("E", throwIfNotFound: true);
        m_Combat_F = m_Combat.FindAction("F", throwIfNotFound: true);
        m_Combat_Q = m_Combat.FindAction("Q", throwIfNotFound: true);
        m_Combat_R = m_Combat.FindAction("R", throwIfNotFound: true);
        m_Combat_C = m_Combat.FindAction("C", throwIfNotFound: true);
        m_Combat_ShiftQ = m_Combat.FindAction("ShiftQ", throwIfNotFound: true);
        m_Combat_ShiftE = m_Combat.FindAction("ShiftE", throwIfNotFound: true);
        m_Combat_ShiftF = m_Combat.FindAction("ShiftF", throwIfNotFound: true);
        m_Combat_ShiftLMB = m_Combat.FindAction("ShiftLMB", throwIfNotFound: true);
        m_Combat_ShiftRMB = m_Combat.FindAction("ShiftRMB", throwIfNotFound: true);
        m_Combat_WE = m_Combat.FindAction("WE", throwIfNotFound: true);
        m_Combat_WQ = m_Combat.FindAction("WQ", throwIfNotFound: true);
        m_Combat_WF = m_Combat.FindAction("WF", throwIfNotFound: true);
        m_Combat_SE = m_Combat.FindAction("SE", throwIfNotFound: true);
        m_Combat_SF = m_Combat.FindAction("SF", throwIfNotFound: true);
        m_Combat_SQ = m_Combat.FindAction("SQ", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }

    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }

    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Movement
    private readonly InputActionMap m_Movement;
    private List<IMovementActions> m_MovementActionsCallbackInterfaces = new List<IMovementActions>();
    private readonly InputAction m_Movement_Jump;
    private readonly InputAction m_Movement_Crouch;
    private readonly InputAction m_Movement_Sprint;
    private readonly InputAction m_Movement_Move;
    public struct MovementActions
    {
        private @PlayerControls m_Wrapper;
        public MovementActions(@PlayerControls wrapper) { m_Wrapper = wrapper; }
        public InputAction @Jump => m_Wrapper.m_Movement_Jump;
        public InputAction @Crouch => m_Wrapper.m_Movement_Crouch;
        public InputAction @Sprint => m_Wrapper.m_Movement_Sprint;
        public InputAction @Move => m_Wrapper.m_Movement_Move;
        public InputActionMap Get() { return m_Wrapper.m_Movement; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(MovementActions set) { return set.Get(); }
        public void AddCallbacks(IMovementActions instance)
        {
            if (instance == null || m_Wrapper.m_MovementActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_MovementActionsCallbackInterfaces.Add(instance);
            @Jump.started += instance.OnJump;
            @Jump.performed += instance.OnJump;
            @Jump.canceled += instance.OnJump;
            @Crouch.started += instance.OnCrouch;
            @Crouch.performed += instance.OnCrouch;
            @Crouch.canceled += instance.OnCrouch;
            @Sprint.started += instance.OnSprint;
            @Sprint.performed += instance.OnSprint;
            @Sprint.canceled += instance.OnSprint;
            @Move.started += instance.OnMove;
            @Move.performed += instance.OnMove;
            @Move.canceled += instance.OnMove;
        }

        private void UnregisterCallbacks(IMovementActions instance)
        {
            @Jump.started -= instance.OnJump;
            @Jump.performed -= instance.OnJump;
            @Jump.canceled -= instance.OnJump;
            @Crouch.started -= instance.OnCrouch;
            @Crouch.performed -= instance.OnCrouch;
            @Crouch.canceled -= instance.OnCrouch;
            @Sprint.started -= instance.OnSprint;
            @Sprint.performed -= instance.OnSprint;
            @Sprint.canceled -= instance.OnSprint;
            @Move.started -= instance.OnMove;
            @Move.performed -= instance.OnMove;
            @Move.canceled -= instance.OnMove;
        }

        public void RemoveCallbacks(IMovementActions instance)
        {
            if (m_Wrapper.m_MovementActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IMovementActions instance)
        {
            foreach (var item in m_Wrapper.m_MovementActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_MovementActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public MovementActions @Movement => new MovementActions(this);

    // Combat
    private readonly InputActionMap m_Combat;
    private List<ICombatActions> m_CombatActionsCallbackInterfaces = new List<ICombatActions>();
    private readonly InputAction m_Combat_LMB;
    private readonly InputAction m_Combat_RMB;
    private readonly InputAction m_Combat_E;
    private readonly InputAction m_Combat_F;
    private readonly InputAction m_Combat_Q;
    private readonly InputAction m_Combat_R;
    private readonly InputAction m_Combat_C;
    private readonly InputAction m_Combat_ShiftQ;
    private readonly InputAction m_Combat_ShiftE;
    private readonly InputAction m_Combat_ShiftF;
    private readonly InputAction m_Combat_ShiftLMB;
    private readonly InputAction m_Combat_ShiftRMB;
    private readonly InputAction m_Combat_WE;
    private readonly InputAction m_Combat_WQ;
    private readonly InputAction m_Combat_WF;
    private readonly InputAction m_Combat_SE;
    private readonly InputAction m_Combat_SF;
    private readonly InputAction m_Combat_SQ;
    public struct CombatActions
    {
        private @PlayerControls m_Wrapper;
        public CombatActions(@PlayerControls wrapper) { m_Wrapper = wrapper; }
        public InputAction @LMB => m_Wrapper.m_Combat_LMB;
        public InputAction @RMB => m_Wrapper.m_Combat_RMB;
        public InputAction @E => m_Wrapper.m_Combat_E;
        public InputAction @F => m_Wrapper.m_Combat_F;
        public InputAction @Q => m_Wrapper.m_Combat_Q;
        public InputAction @R => m_Wrapper.m_Combat_R;
        public InputAction @C => m_Wrapper.m_Combat_C;
        public InputAction @ShiftQ => m_Wrapper.m_Combat_ShiftQ;
        public InputAction @ShiftE => m_Wrapper.m_Combat_ShiftE;
        public InputAction @ShiftF => m_Wrapper.m_Combat_ShiftF;
        public InputAction @ShiftLMB => m_Wrapper.m_Combat_ShiftLMB;
        public InputAction @ShiftRMB => m_Wrapper.m_Combat_ShiftRMB;
        public InputAction @WE => m_Wrapper.m_Combat_WE;
        public InputAction @WQ => m_Wrapper.m_Combat_WQ;
        public InputAction @WF => m_Wrapper.m_Combat_WF;
        public InputAction @SE => m_Wrapper.m_Combat_SE;
        public InputAction @SF => m_Wrapper.m_Combat_SF;
        public InputAction @SQ => m_Wrapper.m_Combat_SQ;
        public InputActionMap Get() { return m_Wrapper.m_Combat; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(CombatActions set) { return set.Get(); }
        public void AddCallbacks(ICombatActions instance)
        {
            if (instance == null || m_Wrapper.m_CombatActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_CombatActionsCallbackInterfaces.Add(instance);
            @LMB.started += instance.OnLMB;
            @LMB.performed += instance.OnLMB;
            @LMB.canceled += instance.OnLMB;
            @RMB.started += instance.OnRMB;
            @RMB.performed += instance.OnRMB;
            @RMB.canceled += instance.OnRMB;
            @E.started += instance.OnE;
            @E.performed += instance.OnE;
            @E.canceled += instance.OnE;
            @F.started += instance.OnF;
            @F.performed += instance.OnF;
            @F.canceled += instance.OnF;
            @Q.started += instance.OnQ;
            @Q.performed += instance.OnQ;
            @Q.canceled += instance.OnQ;
            @R.started += instance.OnR;
            @R.performed += instance.OnR;
            @R.canceled += instance.OnR;
            @C.started += instance.OnC;
            @C.performed += instance.OnC;
            @C.canceled += instance.OnC;
            @ShiftQ.started += instance.OnShiftQ;
            @ShiftQ.performed += instance.OnShiftQ;
            @ShiftQ.canceled += instance.OnShiftQ;
            @ShiftE.started += instance.OnShiftE;
            @ShiftE.performed += instance.OnShiftE;
            @ShiftE.canceled += instance.OnShiftE;
            @ShiftF.started += instance.OnShiftF;
            @ShiftF.performed += instance.OnShiftF;
            @ShiftF.canceled += instance.OnShiftF;
            @ShiftLMB.started += instance.OnShiftLMB;
            @ShiftLMB.performed += instance.OnShiftLMB;
            @ShiftLMB.canceled += instance.OnShiftLMB;
            @ShiftRMB.started += instance.OnShiftRMB;
            @ShiftRMB.performed += instance.OnShiftRMB;
            @ShiftRMB.canceled += instance.OnShiftRMB;
            @WE.started += instance.OnWE;
            @WE.performed += instance.OnWE;
            @WE.canceled += instance.OnWE;
            @WQ.started += instance.OnWQ;
            @WQ.performed += instance.OnWQ;
            @WQ.canceled += instance.OnWQ;
            @WF.started += instance.OnWF;
            @WF.performed += instance.OnWF;
            @WF.canceled += instance.OnWF;
            @SE.started += instance.OnSE;
            @SE.performed += instance.OnSE;
            @SE.canceled += instance.OnSE;
            @SF.started += instance.OnSF;
            @SF.performed += instance.OnSF;
            @SF.canceled += instance.OnSF;
            @SQ.started += instance.OnSQ;
            @SQ.performed += instance.OnSQ;
            @SQ.canceled += instance.OnSQ;
        }

        private void UnregisterCallbacks(ICombatActions instance)
        {
            @LMB.started -= instance.OnLMB;
            @LMB.performed -= instance.OnLMB;
            @LMB.canceled -= instance.OnLMB;
            @RMB.started -= instance.OnRMB;
            @RMB.performed -= instance.OnRMB;
            @RMB.canceled -= instance.OnRMB;
            @E.started -= instance.OnE;
            @E.performed -= instance.OnE;
            @E.canceled -= instance.OnE;
            @F.started -= instance.OnF;
            @F.performed -= instance.OnF;
            @F.canceled -= instance.OnF;
            @Q.started -= instance.OnQ;
            @Q.performed -= instance.OnQ;
            @Q.canceled -= instance.OnQ;
            @R.started -= instance.OnR;
            @R.performed -= instance.OnR;
            @R.canceled -= instance.OnR;
            @C.started -= instance.OnC;
            @C.performed -= instance.OnC;
            @C.canceled -= instance.OnC;
            @ShiftQ.started -= instance.OnShiftQ;
            @ShiftQ.performed -= instance.OnShiftQ;
            @ShiftQ.canceled -= instance.OnShiftQ;
            @ShiftE.started -= instance.OnShiftE;
            @ShiftE.performed -= instance.OnShiftE;
            @ShiftE.canceled -= instance.OnShiftE;
            @ShiftF.started -= instance.OnShiftF;
            @ShiftF.performed -= instance.OnShiftF;
            @ShiftF.canceled -= instance.OnShiftF;
            @ShiftLMB.started -= instance.OnShiftLMB;
            @ShiftLMB.performed -= instance.OnShiftLMB;
            @ShiftLMB.canceled -= instance.OnShiftLMB;
            @ShiftRMB.started -= instance.OnShiftRMB;
            @ShiftRMB.performed -= instance.OnShiftRMB;
            @ShiftRMB.canceled -= instance.OnShiftRMB;
            @WE.started -= instance.OnWE;
            @WE.performed -= instance.OnWE;
            @WE.canceled -= instance.OnWE;
            @WQ.started -= instance.OnWQ;
            @WQ.performed -= instance.OnWQ;
            @WQ.canceled -= instance.OnWQ;
            @WF.started -= instance.OnWF;
            @WF.performed -= instance.OnWF;
            @WF.canceled -= instance.OnWF;
            @SE.started -= instance.OnSE;
            @SE.performed -= instance.OnSE;
            @SE.canceled -= instance.OnSE;
            @SF.started -= instance.OnSF;
            @SF.performed -= instance.OnSF;
            @SF.canceled -= instance.OnSF;
            @SQ.started -= instance.OnSQ;
            @SQ.performed -= instance.OnSQ;
            @SQ.canceled -= instance.OnSQ;
        }

        public void RemoveCallbacks(ICombatActions instance)
        {
            if (m_Wrapper.m_CombatActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(ICombatActions instance)
        {
            foreach (var item in m_Wrapper.m_CombatActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_CombatActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public CombatActions @Combat => new CombatActions(this);
    private int m_MouseSchemeIndex = -1;
    public InputControlScheme MouseScheme
    {
        get
        {
            if (m_MouseSchemeIndex == -1) m_MouseSchemeIndex = asset.FindControlSchemeIndex("Mouse");
            return asset.controlSchemes[m_MouseSchemeIndex];
        }
    }
    public interface IMovementActions
    {
        void OnJump(InputAction.CallbackContext context);
        void OnCrouch(InputAction.CallbackContext context);
        void OnSprint(InputAction.CallbackContext context);
        void OnMove(InputAction.CallbackContext context);
    }
    public interface ICombatActions
    {
        void OnLMB(InputAction.CallbackContext context);
        void OnRMB(InputAction.CallbackContext context);
        void OnE(InputAction.CallbackContext context);
        void OnF(InputAction.CallbackContext context);
        void OnQ(InputAction.CallbackContext context);
        void OnR(InputAction.CallbackContext context);
        void OnC(InputAction.CallbackContext context);
        void OnShiftQ(InputAction.CallbackContext context);
        void OnShiftE(InputAction.CallbackContext context);
        void OnShiftF(InputAction.CallbackContext context);
        void OnShiftLMB(InputAction.CallbackContext context);
        void OnShiftRMB(InputAction.CallbackContext context);
        void OnWE(InputAction.CallbackContext context);
        void OnWQ(InputAction.CallbackContext context);
        void OnWF(InputAction.CallbackContext context);
        void OnSE(InputAction.CallbackContext context);
        void OnSF(InputAction.CallbackContext context);
        void OnSQ(InputAction.CallbackContext context);
    }
}
